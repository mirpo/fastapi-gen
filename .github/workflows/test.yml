name: Test

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  lint-and-build:
    name: Lint and Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up uv
        uses: astral-sh/setup-uv@v7
        with:
          python-version: "3.11"
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Install dependencies
        run: make install

      - name: Lint CLI
        run: make lint

      - name: Build CLI package
        run: uv build

      - name: Upload wheel artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheel
          path: dist/*.whl

  test-generated-projects:
    name: Test (${{ matrix.os }}, py${{ matrix.python-version }})
    needs: lint-and-build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        python-version: ["3.11", "3.12"]

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up uv
        uses: astral-sh/setup-uv@v7
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: make install

      - name: Test hello_world template
        run: |
          uv run fastapi-gen test_hello_world --template hello_world
          cd test_hello_world
          make install
          make lint
          make test
          cd ..
          rm -rf test_hello_world

      - name: Test advanced template
        run: |
          uv run fastapi-gen test_advanced --template advanced
          cd test_advanced
          make install
          make lint
          make test
          cd ..
          rm -rf test_advanced

      - name: Test nlp template
        run: |
          uv run fastapi-gen test_nlp --template nlp
          cd test_nlp
          make install
          make lint
          make test
          cd ..
          rm -rf test_nlp

      - name: Test langchain template
        run: |
          uv run fastapi-gen test_langchain --template langchain
          cd test_langchain
          make install
          make lint
          make test
          cd ..
          rm -rf test_langchain

      - name: Test llama template
        run: |
          uv run fastapi-gen test_llama --template llama
          cd test_llama
          make install
          make lint
          make test
          rm -rf test_llama
        env:
          CFLAGS: ${{ matrix.os == 'macos-latest' && '-march=armv8.2-a+simd' || '' }}
          CXXFLAGS: ${{ matrix.os == 'macos-latest' && '-march=armv8.2-a+simd' || '' }}
          CMAKE_ARGS: ${{ matrix.os == 'macos-latest' && '-DGGML_METAL=OFF' || '' }}
